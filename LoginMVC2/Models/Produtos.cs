//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LoginMVC2.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.Web.Mvc;
    using System.ComponentModel.DataAnnotations;

    public partial class Produtos
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Produtos()
        {
            this.Carrinho = new HashSet<Carrinho>();
            this.Compras = new HashSet<Compras>();
        }

        public int IdProduto { get; set; }
        public string Nome { get; set; }
        public double Preco { get; set; }
        public int Quantidade { get; set; }
        public System.DateTime DataCadastro { get; set; }

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Carrinho> Carrinho { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Compras> Compras { get; set; }
    }

    [MetadataType(typeof(ProdutoMetadado))]
    public partial class Produtos
    {
    }

    public class ProdutoMetadado
    {
        [HiddenInput(DisplayValue = false)]
        [Key]
        public int IdProduto { get; set; }

        [DisplayName("Nome do produto")]
        [Required(ErrorMessage = "Obrigatório informar o nome")]
        [TamanhoString(50)]
        public string Nome { get; set; }

        [DisplayName("Preço (R$)")]
        [Range(0.0, Double.MaxValue)]
        [Required(ErrorMessage = "Obrigatório informar o preço")]
        public double Preco { get; set; }

        [DisplayName("Quantidade disponível")]
        [Required(ErrorMessage = "Obrigatório informar a quantidade")]
        [Range(1, 100, ErrorMessage = "O valor deve estar entre 1 e 100")]
        public int Quantidade { get; set; }

        [DisplayName("Data de cadastro")]
        [Required]
        public DateTime DataCadastro { get; set; }
    }
}
